server:
  port: 80

spring:
  application:
    name: RubberFlight

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: ${rds.username}
    password: ${rds.password}

  output:
    ansi:
      enabled: always

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${rds.googleid}
            client-secret: ${rds.googlesecret}
            scope:
              - email
              - profile
          facebook:
            client-id: ${rds.facebookid}
            client-secret: ${rds.facebooksecret}
            scope:
              - email
              - public_profile
          naver:
            client-id: ${rds.naverid}
            client-secret: ${rds.naversecret}
            scope:
              - email
              - name
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://${rds.domain}/login/oauth2/code/naver
          kakao:
            client-id: ${rds.kakaoclientid} # REST Api 앱 키
            client-secret: ${rds.kakaoclientsecret}
            redirect-uri: http://${rds.domain}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    properties:
      hibernate.format_sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

cors:
  allowed-origins: http://43.202.34.247:3000,http://43.202.34.247:3001

awsServer:
  address: http://43.202.34.247
awsFrontServer:
  address: http://43.202.34.247:3001

app:
  api-key:
    aviation: ${rds.apikey}

  oauth2:
    password: ${rds.oauth2pw}

jwt:
  secret: ${rds.jwtsecret}
  expiredMs: 3600000

file:
  upload-dir: uploads

cohere:
  api:
    key: ${rds.cohereapi}

google:
  api:
    key: ${rds.googleapi}

  search:
    engine:
      id: ${rds.engineid}